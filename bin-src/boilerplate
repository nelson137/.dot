#!/bin/bash
#
# Short description.



s_help() {
    echo 'Usage: s [-h|--help]'
    echo
    echo 'Short description.'
    echo
    echo 'Long, multi-line description.'
    echo
    echo 'Options:'
    echo '  -h, --help  Print this help message and exit'
    exit
}



s_err() {
    [[ "$1" == help ]] &&
        s_help >&2

    echo "s: $1" >&2
    exit 1
}



s() {
    [[ $# == 0 ]] &&
        s_err help

    # Split options
    # Ex: -abc becomes -a -b -c
    local argv=()
    while (( $# > 0 )); do
        if [[ "$1" =~ ^-[^\-]{2,}$ ]]; then
            for (( i=1; i<${#1}; i++ )); do
                argv+=( "-${1:i:1}" )
            done
        else
            argv+=( "$1" )
        fi
        shift
    done

    # Parse arguments
    local arg help
    # for arg in "${argv[@]}"; do
    for (( i=0; i<${#argv}; i++ )); do
        arg="${argv[i]}"
        case "$arg" in
            -h|--help)
                help=1 ;;
            -*|--*)
                s_err "option not recognized: $arg" ;;
            *)
                s_err "argument not recognized: $arg" ;;
        esac
        shift
    done

    [[ "$help" == 1 ]] &&
        s_help

}



s "$@"
