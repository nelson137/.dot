#!/bin/bash
# Get or set the brightness of the screen and/or the physical display
# TODO: [[ ! -f /sys/class/backlight/intel_backlight/brightness ]] && disable -s

# Max screen and display brightnesses
s_max="$(cat /sys/class/backlight/intel_backlight/max_brightness)"
d_max=2



lum_help() {
    echo 'Usage: lum [-h|--help]'
    echo '       lum [-s|--screen] <brightness>'
    echo '       lum [-d|--display] <brightness>'
    echo
    echo 'Get or set the brightness of the screen or physical display.'
    echo
    echo 'Options:'
    echo '  -h, --help     Print this help message and exit'
    echo '  -s, --screen   Set the screen brightness to <brightness>'
    echo '  -d, --display  Set the physical display brightness to <brightness>'
    exit
}



lum_err() {
    [[ "$1" == help ]] &&
        lum_help >&2

    echo "lum: $1" >&2
    exit 1
}



lum_set_screen() {
    # Error out if brightness is not an integer
    [[ "$1" =~ ^[0-9]+$ ]] ||
        lum_err "cannot set brightness to $1"
    # Use bc to compare floating point numbers
    (( $(echo "$1 > $s_max" | bc -l) )) &&
        lum_err "max screen brightness is $s_max"

    sudo tee /sys/class/backlight/intel_backlight/brightness >/dev/null <<< "$1"
}



lum_set_display() {
    # Use bc to compare floating point numbers
    (( $(echo "$1 > $d_max" | bc -l) )) &&
        lum_err "max display brightness is $d_max"
    # Error out if xrandr call fails
    xrandr -d :0 --output eDP-1 --brightness "$1" &>/dev/null ||
        lum_err "cannot set brightness to $1"
}



lum() {
    # Output current screen and display brightness if no arguments were given
    if [[ $# == 0 ]]; then
        # Get current and max screen brightness, calculate brightness percent
        local s="$(cat /sys/class/backlight/intel_backlight/brightness)"
        local s_p="$(echo "scale=2; 100*${s}/${s_max}" | bc)"  # Brightness %
        s_p="$(echo "$s_p" | sed -r 's/0+$//')"  # Remove trailing zeros
        s_p="$(echo "$s_p" | sed -r 's/\.$//')"  # Remove trailing .

        # Get current display brightness
        local d="$(xrandr -d :0 --verbose | awk '/Brightness/ {print $2}')"

        echo "Screen:  ${s}/${s_max} (${s_p}%)"
        echo "Display: $d"
        exit
    fi

    # Parse arguments
    local help set_screen set_display brightness
    while [[ $# > 0 ]]; do
        case $1 in
            -h|--help)
                help=1 ;;
            -s|--screen)
                set_screen=1 ;;
            -d|--display)
                set_display=1 ;;
            -*|--*)
                lum_err "option not recognized: $1" ;;
            *)
                [[ -n "$brightness" ]] &&
                    lum_err help
                brightness="$1" ;;
        esac
        shift
    done

    [[ "$help" == 1 ]] &&
        lum_help

    # Both -s and -d were given
    [[ "$set_screen" == 1 && "$set_display" == 1 ]] &&
        lum_err help

    # No brightness was given
    [[ -z "$brightness" ]] &&
        lum_err help

    # Default brightness values
    local screen_default='61'
    local display_default='1.0'

    if [[ "$set_screen" == 1 ]]; then  # Set screen brightness
        if [[ "$brightness" == reset ]]; then
            lum_set_screen "$screen_default"
        else
            lum_set_screen "$brightness"
        fi
    elif [[ "$set_display" == 1 ]]; then  # Set display brightness
        if [[ "$brightness" == reset ]]; then
            lum_set_display "$display_default"
        else
            lum_set_display "$brightness"
        fi
    else  # No -s or -d option was given
        if [[ "$brightness" == reset ]]; then
            # Reset both screen and display brightnesses
            lum_set_screen "$screen_default"
            lum_set_display "$display_default"
        else
            lum_err help
        fi
    fi
}



lum "$@"
