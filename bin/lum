#!/bin/bash
# Get or set the brightness of the screen and/or the display

# Screen brightness directory
s_b_dir=/sys/class/backlight/intel_backlight

# Max screen and display brightnesses
s_b_max="$(cat "${s_b_dir}/max_brightness")"
d_b_max=2

# Disable -s/--screen if cannot get or set screen brightness
[[ ! -f "${s_b_dir}/brightness" ]] &&
    s_b_disabled=1

# Disable -d/--display if cannot get or set display brightness
xrandr -d :0 &>/dev/null ||
    d_b_disabled=1



lum_help() {
    echo 'Usage: lum [-h|--help]'
    echo '       lum reset'
    echo '       lum {-s|--screen} {<brightness>|reset}'
    echo '       lum {-d|--display} {<brightness>|reset}'
    echo
    echo 'Get or set the brightness of the screen or display.'
    echo
    echo 'Options:'
    echo '  -h, --help     Print this help message and exit'
    echo '  -s, --screen   Set the screen brightness to <brightness>'
    echo '  -d, --display  Set the display brightness to <brightness>'
    echo
    echo 'Description:'
    echo
    echo '  If invoked without any arguments, the current screen and display'
    echo '  brightness values are printed out.'
    echo
    echo '  The default screen brightness is 61.'
    echo '  The default display brightness is 1.'
    echo
    echo '  The screen and display brightness values have a maximum which'
    echo '  cannot be exceeded.'
    echo
    echo '  The maximum screen brightness is 416.'
    echo '  The maximum display brightness is 2.'
    exit 0
}



lum_err() {
    [[ "$1" == help ]] &&
        lum_help >&2

    echo "lum: $1" >&2
    exit 1
}



lum_set_s_b() {
    # Print error if brightness is not an integer
    [[ "$1" =~ ^[0-9]+$ ]] ||
        lum_err "cannot set brightness to $1"
    # Check if brightness exceeds max
    # - Use bc to compare floats
    (( $(bc -l <<< "$1 > $s_b_max") )) &&
        lum_err "max screen brightness is $s_b_max"

    # Try to change screen brightness, print error if it fails
    sudo tee "${s_b_dir}/brightness" >/dev/null <<< "$1" ||
        lum_err "cannot set screen brightness to $1"
}



lum_set_d_b() {
    # Check if brightness exceeds max
    # - Use bc to compare floats
    (( $(bc -l <<< "$1 > $d_b_max") )) &&
        lum_err "max display brightness is $d_b_max"

    local outputs=( $(xrandr | awk '/ connected/ {print $1}') )
    outputs="$(for o in "${outputs[@]}"; do echo -n " --output $o"; done)"

    # Try to change display brightness, print error if it fails
    xrandr -d :0 $outputs --brightness $1 &>/dev/null ||
        lum_err "cannot set display brightness to $1"
}



lum_show_current() {
    # Current screen brightness
    local s_b="$(cat "${s_b_dir}/brightness")"

    if [[ "${s_b}" ]]; then
        # Calculate screen brightness percent
        # - Get percent with 2 decimal places
        # - Remove trailing zeros
        # - Remove trailling .
        local s_b_percent="$(
            bc <<< "scale=2; 100*${s_b}/${s_b_max}" |
            sed -r 's/0+$//' |
            sed -r 's/\.$//'
        )"
    fi

    # Current display brightness
    local d_b="$(
        xrandr -d :0 --verbose 2>/dev/null | awk '/Brightness/ {print $2}'
    )"

    if [[ "${d_b}" ]]; then
        # Calculate display brightness percent
        # - Get percent with 2 decimal places
        # - Remove trailing zeros
        # - Remove trailling .
        local d_b_percent="$(
            bc <<< "scale=2; 100*${d_b}/${d_b_max}" |
            sed -r 's/0+$//' |
            sed -r 's/\.$//'
        )"
    fi

    # Show "value/max (percent%)" if value is not null
    echo "Screen:  ${s_b:+$s_b/$s_b_max ($s_b_percent%)}"
    echo "Display: ${d_b:+$d_b/$d_b_max ($d_b_percent%)}"
}



lum() {
    # Split options
    # Ex: -abc becomes -a -b -c
    local argv=()
    while (( $# > 0 )); do
        if [[ "$1" =~ ^-[^\-]{2,}$ ]]; then
            for (( i=1; i<${#1}; i++ )); do
                argv+=( "-${1:i:1}" )
            done
        else
            argv+=( "$1" )
        fi
        shift
    done

    # Parse arguments
    local arg help set_s set_s_b set_d set_d_b reset_both
    for (( i=0; i<${#argv[@]}; i++ )); do
        arg="${argv[i]}"
        case "$arg" in
            -h|--help)
                help=1 ;;
            -s|--screen)
                set_s=1
                ((i++))
                set_s_b="${argv[i]}" ;;
            -d|--display)
                set_d=1
                ((i++))
                set_d_b="${argv[i]}" ;;
            -*|--*)
                lum_err "option not recognized: $arg" ;;
            *)
                [[ "$arg" != reset ]] &&
                    lum_err help
                reset_both=1 ;;
        esac
    done

    [[ "$help" ]] &&
        lum_help

    # Cannot get or set screen brightness
    [[ "$set_s" && "$s_b_disabled" ]] &&
        lum_err 'cannot get or set screen brightness'

    # Cannot get or set display brightness
    [[ "$set_d" && "$d_b_disabled" ]] &&
        lum_err 'cannot get or set display brightness'

    # -s/--screen was given without a brightness
    [[ "$set_s" && ! "$set_s_b" ]] &&
        lum_err help

    # -d/--display was given without a brightness
    [[ "$set_d" && ! "$set_d_b" ]] &&
        lum_err help

    # User tried to set screen and/or display brightness and reset both
    [[ "$set_s" || "$set_d" ]] && [[ "$reset_both" ]] &&
        lum_err help

    # Print current screen and display brightnesses
    if [[ ! "$set_s" && ! "$set_d" && ! "$reset_both" ]]; then
        lum_show_current

        exit 0
    fi

    # Default brightness values
    local s_b_default=61
    local d_b_default=1

    # Reset both screen and display brightnesses
    if [[ "$reset_both" ]]; then
        # Reset screen brightness
        [[ ! "$s_b_disabled" ]] &&
            lum_set_s_b "$s_b_default"

        # Reset display brightness
        [[ ! "$d_b_disabled" ]] &&
            lum_set_d_b "$d_b_default"

        exit 0
    fi

    # Set screen brightness
    if [[ "$set_s" ]]; then
        if [[ "$set_s_b" == reset ]]; then
            # Reset screen brightness
            lum_set_s_b "$s_b_default"
        else
            # Set screen brightness to $s_b
            lum_set_s_b "$set_s_b"
        fi
    fi

    # Set display brightness
    if [[ "$set_d" ]]; then
        if [[ "$set_d_b" == reset ]]; then
            # Reset display brightness
            lum_set_d_b "$d_b_default"
        else
            # Set display brightness to $d_b
            lum_set_d_b "$set_d_b"
        fi
    fi
}



lum "$@"
