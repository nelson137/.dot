#!/bin/bash
# Get or set the brightness of the screen and/or the physical display

# Screen brightness directory
s_b_dir='/sys/class/backlight/intel_backlight'

# Max screen and display brightnesses
s_b_max="$(cat "${s_b_dir}/max_brightness")"
d_b_max='2'



lum_help() {
    echo 'Usage: lum [-h|--help]'
    echo '       lum [-v|--verbose] [-s|--screen] [<brightness>|reset]'
    echo '       lum [-v|--verbose] [-d|--display] [<brightness>|reset]'
    echo
    echo 'Get or set the brightness of the screen or physical display.'
    echo
    echo 'Options:'
    echo '  -h, --help     Print this help message and exit'
    echo '  -s, --screen   Set the screen brightness to <brightness>'
    echo '  -d, --display  Set the physical display brightness to <brightness>'
    exit
}



lum_err() {
    [[ "$1" == help ]] &&
        lum_help >&2

    echo "lum: $1" >&2
    exit 1
}



lum_warn() {
    echo "lum: $1" >&2
}



lum_set_s_b() {
    # Print error if brightness is not an integer
    [[ "$1" =~ ^[0-9]+$ ]] ||
        lum_err "cannot set brightness to $1"
    # Check if brightness exceeds max
    # - Use bc to compare floats
    (( $(echo "$1 > $s_b_max" | bc -l) )) &&
        lum_err "max screen brightness is $s_b_max"

    # Try to change screen brightness, print error if it fails
    sudo tee "${s_b_dir}/brightness" >/dev/null <<< "$1" ||
        lum_err "cannot set screen brightness to $1"
}



lum_set_d_b() {
    # Check if brightness exceeds max
    # - Use bc to compare floats
    (( $(echo "$1 > $d_b_max" | bc -l) )) &&
        lum_err "max display brightness is $d_b_max"

    # Try to change display brightness, print error if it fails
    xrandr -d :0 --output eDP-1 --brightness "$1" &>/dev/null ||
        lum_err "cannot set display brightness to $1"
}



lum() {
    local s_b_disabled d_b_disabled
    # Disable -s/--screen if cannot get or modify screen brightness
    [[ ! -f "${s_b_dir}/brightness" ]] &&
        s_b_disabled=1

    # Disable -d/--display if cannot get or modify display brightness
    xrandr -d :0 &>/dev/null ||
        d_b_disabled=1

    # Parse arguments
    local help verbose set_s set_d brightness
    while (( $# > 0 )); do
        case $1 in
            -h|--help)
                help=1 ;;
            -v|--verbose)
                verbose=1 ;;
            -s|--screen)
                [[ "$s_b_disabled" == 1 ]] &&
                    lum_err 'cannot get or modify screen brightness'
                set_s=1 ;;
            -d|--display)
                [[ "$d_b_disabled" == 1 ]] &&
                    lum_err 'cannot get or modify display brightness'
                set_d=1 ;;
            -*|--*)
                lum_err "option not recognized: $1" ;;
            *)
                [[ "$brightness" ]] &&
                    lum_err help
                brightness="$1" ;;
        esac
        shift
    done

    # Output current screen and display brightness if no arguments were given
    if [[ $# == 0 ]]; then
        # Current screen brightness
        local s_b="$(cat "${s_b_dir}/brightness")"

        # Calculate brightness percent
        # - Get percent with 2 decimal places
        # - Remove trailing zeros
        # - Remove trailling .
        local s_b_percent="$(
            echo "scale=2; 100*${s_b}/${s_b_max}" | bc |
            sed -r 's/0+$//' |
            sed -r 's/\.$//'
        )"

        # Current display brightness
        local d_b="$(
            xrandr -d :0 --verbose 2>/dev/null | awk '/Brightness/ {print $2}'
        )"

        echo "Screen:  ${s_b}/${s_b_max} (${s_b_percent}%)"
        echo "Display: $d_b"

        # Only print warnings if verbose
        if [[ "$verbose" == 1 ]]; then
            [[ "$s_b_disabled" == 1 ]] &&
                lum_warn 'cannot get or modify screen brightness'

            [[ "$d_b_disabled" == 1 ]] &&
                lum_warn 'cannot get or modify display brightness'
        fi

        exit
    fi

    [[ "$help" == 1 ]] &&
        lum_help

    # Both -s/--screen and -d/--display were given
    [[ "$set_s" == 1 && "$set_d" == 1 ]] &&
        lum_err help

    # No brightness was given
    [[ -z "$brightness" ]] &&
        lum_err help

    # Default brightness values
    local s_b_default='61'
    local d_b_default='1.0'

    if [[ "$set_s" == 1 ]]; then  # Set screen brightness
        if [[ "$brightness" == reset ]]; then
            # Reset screen brightness
            lum_set_s_b "$s_b_default"
        else
            # Set screen brightness to $brightness
            lum_set_s_b "$brightness"
        fi
    elif [[ "$set_d" == 1 ]]; then  # Set display brightness
        if [[ "$brightness" == reset ]]; then
            # Reset display brightness
            lum_set_d_b "$d_b_default"
        else
            # Set display brightness to $brightness
            lum_set_d_b "$brightness"
        fi
    else  # No -s/--screen or -d/--display option was given
        if [[ "$brightness" == reset ]]; then
            # Reset both screen and display brightnesses
            lum_set_s_b "$s_b_default"
            lum_set_d_b "$d_b_default"
        else
            lum_err help
        fi
    fi
}



lum "$@"
