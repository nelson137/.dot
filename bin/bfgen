#!/usr/bin/env python3

import sys, re
from argparse import ArgumentParser
from itertools import groupby


def preprocess(text):
    data = []
    for o in [ord(c) for c in text]:
        rounded = round(o/10) * 10
        make_dict = lambda o, r, d: {'ord': o, 'rounded': r, 'diff': d}
        data.append(make_dict(o, rounded, o-rounded))

    return data


def gen_script(data, outfn):
    lines = [list(l[1]) for l in groupby(data, key=lambda x: x['ord'] == 10)]
    script = ''
    for line in lines:
        script += '++++++++++['

        for char in line:
            script += '>' + '+' * int(char['rounded']/10)
        script += '<' * len(line) + '-]'

        for char in line:
            op = '+' if char['diff'] > 0 else '-'
            script += '>' + op * abs(char['diff']) + '.'
        script += '>'

    with open(outfn, 'w') as out_f:
        out_f.write(script)


def main(args):
    if args.infn is None:
        if not sys.stdin.isatty():
            text = sys.stdin.read()
        else:
            print('Nothing in stdin')
            return
        args.outfn = 'out.bf'
    else:
        try:
            with open(args.infn, 'r') as f:
                text = f.read()
        except FileNotFoundError:
            print('FileNotFound:', args.infn)
            return
        args.outfn = re.sub('\.txt$', '', args.infn) + '.bf'

    data = preprocess(text)
    gen_script(data, args.outfn)


if __name__ == '__main__':
    parser = ArgumentParser(description='')
    parser.add_argument('-i', '--input', dest='infn', metavar='infile',
                        default=None, help='')
    parser.add_argument('-o', '--output', dest='outfn', metavar='outfile',
                        default=None, help='')
    main(parser.parse_args())
