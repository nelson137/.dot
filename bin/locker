#!/bin/bash
#
# Locker -- locks the screen using i3lock
# If used with xss-lock's --transfer-sleep-lock option, attempted suspends
# will be blocked until the screen is locked.


# Don't do anything if already locked
pgrep i3lock >/dev/null && exit 0


pre_lock() {
    # Pause dunst
    pkill -USR1 --euid "$(id -u)" --exact dunst
    # Pause Spotify
    sp pause
    return
}


lock() {
    local imgpath="$HOME/.config/i3/assets/lockscreen/lockscreen.png"
    i3lock -ei "$imgpath" -p default
}


post_lock() {
    # Resume dunst
    pkill -USR2 --euid "$(id -u)" --exact dunst
    return
}


pre_lock

if [[ -e /dev/fd/${XSS_SLEEP_LOCK_FD:--1} ]]; then
    kill_i3lock() {
        pkill -xu $EUID "$@" i3lock
    }

    # Kill the locker if this script gets killed
    trap kill_i3lock TERM INT

    # Don't allow i3lock to inherit a copy of the sleep lock fd
    lock {XSS_SLEEP_LOCK_FD}<&-

    # Close the sleep lock fd
    exec {XSS_SLEEP_LOCK_FD}<&-

    # Wait for lock to end
    # kill -0 sends no signal
    while kill_i3lock -0; do
        sleep 0.5
    done
else
    # Kill the locker if this script gets killed
    trap 'kill %%' TERM INT

    lock &
    wait
fi

post_lock
